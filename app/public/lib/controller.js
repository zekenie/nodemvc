// Generated by CoffeeScript 1.6.3
(function() {
  var Controller, template,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  template = '<div class="controller panel panel-default">\
			<span data-grab="closeEl" class="mclose pull-left">\
				<span class="glyphicon glyphicon-remove"></span>\
			</span>\
\
				<div class="panel-heading">\
					<input autofocus rv-input="name | codeSafe" placeholder="controller fn name" class="controller-name" type="text">\
						<div class="btn-group btn-group-xs pull-right" data-toggle="buttons">\
							<label class="btn btn-primary">\
								<input type="radio" rv-checked="res" value="json"> JSON\
							</label>\
							<label class="btn btn-primary">\
								<input type="radio" rv-checked="res" value="html"> HTML\
							</label>\
						</div>\
				</div>\
				<div class="panel-body">\
					<div class="row">\
						<div data-grab="routeContainer" class="col-xs-12">\
							<input data-grab="routeInput" rv-input="route | codeSafe" placeholder="Route eg /<%=parent.plural.toLowerCase()%>/..." class="form-control controller-route" type="text">\
						</div>\
						<div data-grab="viewContainer" class="col-xs-6">\
							<input rv-input="view | codeSafe" placeholder="view" class="form-control" data-grab="viewInput">\
						</div>\
					</div>\
				</div>\
				<div class="btn-group methodSelect" data-toggle="buttons">\
					<label class="btn btn-primary">\
						<input type="radio" rv-checked="method" value="get"> GET\
					</label>\
					<label class="btn btn-primary">\
						<input type="radio" rv-checked="method" value="post"> POST\
					</label>\
					<label class="btn btn-primary">\
						<input type="radio" rv-checked="method" value="put"> PUT\
					</label>\
					<label class="btn btn-primary">\
						<input type="radio" rv-checked="method" value="delete"> DEL\
					</label>\
				</div>';

  Controller = (function(_super) {
    __extends(Controller, _super);

    function Controller(data, parent) {
      data = _.extend({
        name: '',
        view: '',
        method: '',
        route: '',
        res: ''
      }, data);
      this.parent = parent;
      this.el = $(_.template(template, this));
      Controller.__super__.constructor.apply(this, arguments);
      this.parent.controllersContainer.append(this.el);
      this.render();
      this.addEventListeners();
    }

    Controller.prototype.showView = function() {
      this.routeContainer.removeClass('col-xs-12').addClass('col-xs-6');
      return this.viewContainer.show();
    };

    Controller.prototype.hideView = function() {
      this.routeContainer.addClass('col-xs-12').removeClass('col-xs-6');
      return this.viewContainer.hide();
    };

    Controller.prototype.addEventListeners = function() {
      var self;
      self = this;
      this.closeEl.on('click', function() {
        return self.remove();
      });
      this.viewContainer.hide();
      return this.on('change:res', function() {
        if (self.res === 'html') {
          return self.showView();
        } else {
          return self.hideView();
        }
      });
    };

    Controller.prototype.toJSON = function() {
      return _.pick(this, 'name', 'view', 'method', 'route', 'res');
    };

    return Controller;

  })(classes.Base);

  classes.Controller = Controller;

}).call(this);
