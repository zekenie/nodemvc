// Generated by CoffeeScript 1.6.3
(function() {
  var Project, children, template,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  children = {
    'Entity': 'entities'
  };

  template = '<div id="header">\
				<button data-grab="addEntityBtn" class=" btn btn-success">Add Entity</button>\
				<button class="btn btn-warning" data-toggle="modal" data-target="#dependencies">Dependencies</button>\
				<button data-grab="downloadBtn" class=" btn btn-danger">Download</button>\
				<ul data-grab="pills" class="nav pull-right nav-pills"></ul>\
			</div>\
\
			<div class="modal fade" id="dependencies">\
				<div class="modal-dialog">\
					<div class="modal-content">\
						<div class="modal-header">\
							<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\
							<h4 class="modal-title">Dependencies</h4>\
						</div>\
						<div class="modal-body" data-grab="dependencyContainer">\
							<input type="text" autofocus placeholder="Search bower/npm..." class="typeahead form-control" data-grab="typeahead">\
							<br/><br/>\
							<i>One per line</i>\
							<br/><br/>\
							<div class="row">\
								<div class="col-sm-6">\
									<p>NPM</p>\
									<textarea rv-value="npm | lineToArray" class="form-control"></textarea>\
								</div>\
								<div class="col-sm-6">\
									<p>Bower</p>\
									<textarea rv-value="bower | lineToArray" class="form-control"></textarea>\
								</div>\
							</div>\
						</div>\
						<div class="modal-footer">\
							<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\
						</div>\
					</div>\
				</div>\
			</div>\
			<div class="tab-content">\
\
			</div>';

  Project = (function(_super) {
    __extends(Project, _super);

    function Project(data, parent) {
      data = _.extend({
        name: 'myProject',
        entities: [],
        bower: [],
        npm: ["express", "express-train", "express-hbs", "coffee-script"]
      }, data);
      this.el = $(_.template(template, this));
      Project.__super__.constructor.apply(this, arguments);
      $("#main").append(this.el);
      this.instanciateChildren(children);
      this.addEventListeners();
    }

    Project.prototype.addEntity = function() {
      var index;
      index = this.entities.push(new classes.Entity({}, this));
      console.log(this.entities[index - 1]);
      return this.trigger('addEntityEvt');
    };

    Project.prototype.toJSON = function() {
      return _.map(this.entities, function(entity) {
        return entity.toJSON();
      });
    };

    Project.prototype.download = function() {
      var entity, prj, zip, _i, _len;
      prj = this.toJSON();
      zip = new JSZip();
      zip.file('/pubilc/bower.json', new EJS({
        url: './templates/bower.ejs'
      }).render(this.bower));
      zip.file('package.json', new EJS({
        url: './templates/package.ejs'
      }).render(this.npm));
      zip.file('lib/routes.coffee', new EJS({
        url: './templates/routes.ejs'
      }).render(prj));
      for (_i = 0, _len = prj.length; _i < _len; _i++) {
        entity = prj[_i];
        zip.file("models/" + entity.plural + ".coffee", new EJS({
          url: './templates/model.ejs'
        }).render(entity));
        zip.file("controllers/" + entity.plural + "Controller.coffee", new EJS({
          url: './templates/controller.ejs'
        }).render(entity));
      }
      return location.href = 'data:application/zip;base64,' + zip.generate();
    };

    Project.prototype.addDependency = function(type, dep) {
      console.log(dep);
      this[type].push(dep);
      return this.set(type, this[type]);
    };

    Project.prototype.addEventListeners = function() {
      var self;
      self = this;
      this.addEntityBtn.on('click', $.proxy(this.addEntity, this));
      this.downloadBtn.on('click', $.proxy(this.download, this));
      this.typeahead.typeahead([
        {
          name: 'bower',
          prefetch: 'http://bower-component-list.herokuapp.com/',
          valueKey: 'name',
          engine: Hogan,
          header: '<h3 class="dep-type">Bower</h3>'
        }, {
          name: 'npm',
          remote: '/npmSearch?q=%QUERY',
          header: '<h3 class="dep-type">NPM</h3>',
          limit: 35
        }
      ]);
      return this.typeahead.on('typeahead:selected', function(e, selected, type) {
        self.addDependency(type, selected.value || selected.name);
        console.log(this);
        return this.value = '';
      });
    };

    return Project;

  })(classes.Base);

  classes.Project = Project;

}).call(this);
